openapi: 3.0.3
info:
  title: Aimigo Agent API
  description: API documentation for the Aimigo Agent Web Application
  version: 1.0.0
  contact:
    name: ProjectX AUX
    url: https://github.com/ProjectX-AUX/aimigo-agent-web-app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://api.aimigo-agent.com
    description: Production server

tags:
  - name: Health
    description: Health check endpoints
  - name: Voice
    description: Voice transcription services
  - name: Conversation
    description: Conversation management and AI interactions
  - name: File
    description: File upload and management

paths:
  /api/health:
    get:
      tags:
        - Health
      summary: Health check endpoint
      description: Returns the current status of the API service
      operationId: getHealth
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  /api/voice/transcribe:
    post:
      tags:
        - Voice
      summary: Transcribe audio to text
      description: Converts audio file to transcribed text using speech-to-text service
      operationId: transcribeAudio
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audioBlob:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  description: Language code for transcription
                  default: en
              required:
                - audioBlob
      responses:
        "200":
          description: Audio transcription successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoiceTranscriptionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "500":
          description: Transcription error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /api/conversation:
    post:
      tags:
        - Conversation
      summary: Send conversation message
      description: Processes a conversation message and returns AI response with intent detection
      operationId: sendConversationMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversationRequest"
      responses:
        "200":
          description: Conversation processed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationWithAttachments"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "500":
          description: Conversation processing error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
    get:
      tags:
        - Conversation
      summary: Get conversation history
      description: Retrieves paginated conversation history with optional search
      operationId: getConversationHistory
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Number of conversations per page
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: search
          in: query
          description: Search term for filtering conversations
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Conversation history retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationHistoryResponse"
        "500":
          description: Error fetching conversation history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /api/conversation/{id}/message:
    post:
      tags:
        - Conversation
      summary: Send message with attachments
      description: Handles messages with audio files and file attachments
      operationId: sendMessageWithAttachments
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                  description: ID of the conversation
                text:
                  type: string
                  description: Text message content
                audioFile:
                  type: string
                  format: binary
                  description: Audio file attachment
                file_1:
                  type: string
                  format: binary
                  description: Additional file attachment (up to multiple files with pattern file_*)
                lastMessage:
                  type: string
                  description: id of the last message in the conversation
              required:
                - conversationId
      responses:
        "200":
          description: Message processed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /api/conversation/{id}:
    get:
      tags:
        - Conversation
      summary: Get conversation by ID
      description: Retrieves a specific conversation with all its messages and attachments
      operationId: getConversationById
      parameters:
        - name: id
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Conversation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/ConversationWithAttachments"
        "404":
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /api/file/upload:
    post:
      tags:
        - File
      summary: Upload file
      description: Uploads a file to the server with validation
      operationId: uploadFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
                purpose:
                  type: string
                  description: Purpose of the file upload
                  enum: [conversation, email_attachment]
                  default: conversation
              required:
                - file
      responses:
        "200":
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadResponse"
        "400":
          description: Bad request (file validation error)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
        "500":
          description: Upload error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
        timestamp:
          type: string
          format: date-time
          example: "2025-07-28T12:00:00.000Z"
        service:
          type: string
          example: aimigo-agent-api
        version:
          type: string
          example: "1.0.0"
      required:
        - status
        - timestamp
        - service
        - version

    VoiceTranscriptionResponse:
      type: object
      properties:
        transcribeId:
          type: string
          description: Unique, voice ID for the transcription
        text:
          type: string
          description: Transcribed text from audio
          example: "Hello, I need to schedule a meeting with John tomorrow at 2 PM"
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence score of the transcription
          example: 0.95
        language:
          type: string
          description: Detected language of the audio
          example: en
        duration:
          type: number
          description: Duration of the audio in seconds
          example: 8
      required:
        - text
        - confidence
        - language
        - duration

    ConversationRequest:
      type: object
      properties:
        message:
          type: string
          description: User message content
          maxLength: 5000
          example: "Can you help me schedule a meeting for tomorrow?"
        conversationId:
          type: string
          description: Optional conversation ID for continuing existing conversation
          example: "conv_12345"
        attachments:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/AudioFileInfo"
              - $ref: "#/components/schemas/AttachmentInfo"
      required:
        - message
    EmailDraftData:
      type: object
      properties:
        type:
          type: string
          enum: [email]
          example: email
        title:
          type: string
          example: "Draft Email"
        recipients:
          type: array
          items:
            type: string
          example: ["team@company.com"]
        subject:
          type: string
          example: "Important Update"
        paragraphs:
          type: array
          items:
            type: string
          example:
            ["Hello team,", "I hope this email finds you well.", "Best regards"]
        priority:
          type: string
          enum: [low, medium, high]
          example: medium
      required:
        - title
        - recipients
        - subject
        - paragraphs

    ScheduleData:
      type: object
      properties:
        type:
          type: string
          enum: [schedule]
          example: schedule
        title:
          type: string
          example: "Team Meeting"
        date:
          type: string
          format: date
          example: "2025-07-29"
        time:
          type: string
          pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
          example: "14:00"
        location:
          type: string
          example: "Conference Room A"
        attendees:
          type: array
          items:
            type: string
          example: ["john@company.com", "sarah@company.com"]
        description:
          type: string
          example: "Weekly team sync to discuss project progress"
        duration:
          type: number
          description: Duration in minutes
          example: 60
      required:
        - title
        - date
        - time
        - location
        - attendees

    MessageResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Message received and processed"
        data:
          type: object
          properties:
            conversationId:
              type: string
              example: "conv_456"
            userMessage:
              $ref: "#/components/schemas/UserMessage"
            aiResponse:
              $ref: "#/components/schemas/AIMessage"
            confirmation:
              oneOf:
                - $ref: "#/components/schemas/EmailDraftData"
                - $ref: "#/components/schemas/ScheduleData"
      required:
        - success
        - message

    UserMessage:
      type: object
      properties:
        id:
          type: string
          example: "msg_user_123"
        conversationId:
          type: string
          example: "conv_456"
        text:
          type: string
          example: "Can you help me draft an email?"
        audioInfo:
          $ref: "#/components/schemas/AudioFileInfo"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/AttachmentInfo"
        timestamp:
          type: string
          format: date-time
          example: "2025-07-28T12:00:00.000Z"
        sender:
          type: string
          enum: [user]
          example: user
      required:
        - id
        - conversationId
        - text
        - timestamp
        - sender

    AIMessage:
      type: object
      properties:
        id:
          type: string
          example: "msg_ai_789"
        conversationId:
          type: string
          example: "conv_456"
        text:
          type: string
          example: "I can help you draft an email. Let me prepare an email template for you to review."
        timestamp:
          type: string
          format: date-time
          example: "2025-07-28T12:00:01.000Z"
        sender:
          type: string
          enum: [assistant]
          example: assistant
        suggestions:
          type: array
          items:
            type: string
          description: Suggested follow-up actions
          example:
            [
              "Can you help me with something else?",
              "Let me modify the details",
              "This looks good, proceed",
            ]
      required:
        - id
        - conversationId
        - text
        - timestamp
        - sender

    AudioFileInfo:
      type: object
      nullable: true
      properties:
        id:
          type: string
          description: Unique ID for the audio transcription
          example: "audio_123_transcribe"
        url:
          type: string
          format: uri
          description: URL of the audio file
          example: "https://cdn.aimigo-agent.com/uploads/audio_123_recording.webm"
        name:
          type: string
          example: "audio_recording.webm"
        size:
          type: number
          example: 1024000
        type:
          type: string
          example: "audio/webm"
        timestamp:
          type: string
          format: date-time
          example: "2025-07-28T12:00:00.000Z"
        savedPath:
          type: string
          example: "/upload_files/audio_msg_123_recording.webm"
        filename:
          type: string
          example: "audio_msg_123_recording.webm"
      required:
        - name
        - size
        - type
        - timestamp
        - savedPath
        - filename

    AttachmentInfo:
      type: object
      properties:
        fileId:
          type: string
          example: "file_12345"
        originalName:
          type: string
          example: "document.pdf"
        size:
          type: number
          example: 2048000
        type:
          type: string
          example: "application/pdf"
        timestamp:
          type: string
          format: date-time
          example: "2025-07-28T12:00:00.000Z"
        savedPath:
          type: string
          example: "/upload_files/file_msg_123_1690537200000.pdf"
        filename:
          type: string
          example: "file_msg_123_1690537200000.pdf"
      required:
        - originalName
        - size
        - type
        - timestamp
        - savedPath
        - filename

    ConfirmationData:
      type: object
      nullable: true
      properties:
        type:
          type: string
          enum: [email, schedule]
          example: email
        shouldNavigate:
          type: boolean
          example: true
        data:
          oneOf:
            - $ref: "#/components/schemas/EmailDraftData"
            - $ref: "#/components/schemas/ScheduleData"
      required:
        - type
        - shouldNavigate
        - data

    ConversationWithAttachments:
      type: object
      properties:
        id:
          type: string
          example: "conv_456"
        messages:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/UserMessage"
              - $ref: "#/components/schemas/AIMessage"
        confirmation:
          oneOf:
            - $ref: "#/components/schemas/EmailDraftData"
            - $ref: "#/components/schemas/ScheduleData"
        createdAt:
          type: string
          format: date-time
          example: "2025-07-28T10:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-07-28T12:00:01.000Z"
      required:
        - id
        - messages
        - createdAt
        - updatedAt

    ConversationHistoryResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/ConversationSummary"
        total:
          type: number
          description: Total number of conversations
          example: 25
        page:
          type: number
          description: Current page number
          example: 1
        limit:
          type: number
          description: Number of conversations per page
          example: 10
      required:
        - conversations
        - total
        - page
        - limit

    ConversationSummary:
      type: object
      properties:
        id:
          type: string
          example: "conv_1"
        title:
          type: string
          example: "Meeting Planning Discussion"
        lastMessage:
          type: string
          example: "I'll schedule the team meeting for next Tuesday at 2 PM in Conference Room A."
        messageCount:
          type: number
          example: 12
        createdAt:
          type: string
          format: date-time
          example: "2025-07-26T12:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-07-27T12:00:00.000Z"
        messageId:
          type: string
          example: "msg_12345"
      required:
        - id
        - title
        - lastMessage
        - messageCount
        - createdAt
        - updatedAt

    FileUploadResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        fileId:
          type: string
          example: "file_abc123"
        url:
          type: string
          format: uri
          example: "https://cdn.aimigo-agent.com/uploads/file_abc123/document.pdf"
        metadata:
          type: object
          properties:
            filename:
              type: string
              example: "document.pdf"
            size:
              type: number
              example: 2048000
            type:
              type: string
              example: "application/pdf"
            savedPath:
              type: string
              example: "/upload_files/file_abc123_document.pdf"
          required:
            - filename
            - size
            - type
        error:
          type: string
          description: Error message if upload failed
          example: "File size exceeds maximum limit"
      required:
        - success

    ApiError:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Failed to process request"
        code:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        details:
          description: Additional error details
          example: "File is required for upload"
      required:
        - error
        - code

  parameters:
    ConversationId:
      name: id
      in: path
      description: Conversation ID
      required: true
      schema:
        type: string
        example: "conv_12345"

    PageNumber:
      name: page
      in: query
      description: Page number for pagination
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1

    PageLimit:
      name: limit
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100

    SearchQuery:
      name: search
      in: query
      description: Search term for filtering
      required: false
      schema:
        type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
# Global security (commented out since the current API doesn't implement authentication)
# security:
#   - BearerAuth: []
